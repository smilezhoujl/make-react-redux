{"ast":null,"code":"var _jsxFileName = \"/Users/jilin.zhou/Desktop/reactProj/colorredux/color_redux/src/Content.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from './react-redux';\nimport ThemeSwitch from './ThemeSwitch';\n\nclass Content extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: this.props.themeColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"React.js \\u5C0F\\u4E66\\u5185\\u5BB9\"), React.createElement(ThemeSwitch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n} // 告诉connect 根据 state 需要获取哪些数据 ，依赖后置\n\n\nContent.contextTypes = {\n  themeColor: PropTypes.string // constructor(){\n  //     super()\n  //     this.state = { themeColor : '' }\n  // }\n  // componentWillMount(){\n  //     const { store } = this.context\n  //     this._updateThemeColor() \n  //     store.subscribe(() => this._updateThemeColor())\n  // }\n  // _updateThemeColor(){\n  //     const { store } = this.context \n  //     const state = store.getState()\n  //     this.setState({ themeColor : state.themeColor })\n  // }\n\n};\n\nconst mapStateToProps = state => {\n  return {\n    themeColor: state.themeColor\n  };\n};\n\nContent = connect(mapStateToProps)(Content);\nexport default Content;","map":{"version":3,"sources":["/Users/jilin.zhou/Desktop/reactProj/colorredux/color_redux/src/Content.js"],"names":["React","Component","PropTypes","connect","ThemeSwitch","Content","render","color","props","themeColor","contextTypes","string","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAA+B;AAsB3BK,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAG,KAAKC,KAAL,CAAWC;AAArB,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADJ,EAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA7B0B,C,CAgC/B;;;AAhCMJ,O,CACKK,Y,GAAe;AAClBD,EAAAA,UAAU,EAAGP,SAAS,CAACS,MADL,CAItB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAnBsB,C;;AAgC1B,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHJ,IAAAA,UAAU,EAAGI,KAAK,CAACJ;AADhB,GAAP;AAGH,CAJD;;AAMAJ,OAAO,GAAGF,OAAO,CAACS,eAAD,CAAP,CAAyBP,OAAzB,CAAV;AACA,eAAeA,OAAf","sourcesContent":["import React , { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from './react-redux'\nimport ThemeSwitch from './ThemeSwitch'\n\nclass Content extends Component{\n    static contextTypes = {\n        themeColor : PropTypes.string\n    }\n\n    // constructor(){\n    //     super()\n    //     this.state = { themeColor : '' }\n    // }\n\n    // componentWillMount(){\n    //     const { store } = this.context\n    //     this._updateThemeColor() \n    //     store.subscribe(() => this._updateThemeColor())\n    // }\n\n    // _updateThemeColor(){\n    //     const { store } = this.context \n    //     const state = store.getState()\n    //     this.setState({ themeColor : state.themeColor })\n    // }\n\n    render(){\n        return (\n            <div>\n                <p style={{ color : this.props.themeColor }}>React.js 小书内容</p>\n                <ThemeSwitch/>\n            </div>\n        )\n    }\n}\n\n// 告诉connect 根据 state 需要获取哪些数据 ，依赖后置\nconst mapStateToProps = (state) => {\n    return {\n        themeColor : state.themeColor\n    }\n}\n\nContent = connect(mapStateToProps)(Content)\nexport default Content\n"]},"metadata":{},"sourceType":"module"}
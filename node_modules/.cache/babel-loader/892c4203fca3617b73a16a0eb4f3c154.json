{"ast":null,"code":"var _jsxFileName = \"/Users/jilin.zhou/Desktop/reactProj/make_react_redux/make-react-redux/src/Content.js\";\nimport React, { Component } from 'react';\nimport ThemeSwitch from './ThemeSwitch';\nimport PropTypes from 'prop-types';\n\nclass Content extends Component {\n  constructor() {\n    super();\n    this.state = {\n      themeColor: ''\n    };\n  }\n\n  componentWillMount() {\n    const store = this.context.store;\n\n    this._updateThemeColor();\n\n    store.subscribe(() => this._updateThemeColor());\n  }\n\n  _updateThemeColor() {\n    const store = this.context.store;\n    const state = store.getState();\n    this.setState({\n      themeColor: state.themeColor\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: this.state.themeColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"React.js \\u5C0F\\u4E66\\u5185\\u5BB9\"), React.createElement(ThemeSwitch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  }\n\n}\n\nContent.contextTypes = {\n  store: PropTypes.object\n};\nexport default Content;","map":{"version":3,"sources":["/Users/jilin.zhou/Desktop/reactProj/make_react_redux/make-react-redux/src/Content.js"],"names":["React","Component","ThemeSwitch","PropTypes","Content","constructor","state","themeColor","componentWillMount","store","context","_updateThemeColor","subscribe","getState","setState","render","color","contextTypes","object"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAK5BI,EAAAA,WAAW,GAAI;AACX;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAb;AACH;;AAEDC,EAAAA,kBAAkB,GAAI;AAAA,UACVC,KADU,GACA,KAAKC,OADL,CACVD,KADU;;AAElB,SAAKE,iBAAL;;AACAF,IAAAA,KAAK,CAACG,SAAN,CAAgB,MAAM,KAAKD,iBAAL,EAAtB;AACH;;AAEDA,EAAAA,iBAAiB,GAAI;AAAA,UACTF,KADS,GACC,KAAKC,OADN,CACTD,KADS;AAEjB,UAAMH,KAAK,GAAGG,KAAK,CAACI,QAAN,EAAd;AACA,SAAKC,QAAL,CAAc;AAAEP,MAAAA,UAAU,EAAED,KAAK,CAACC;AAApB,KAAd;AACH;;AAEDQ,EAAAA,MAAM,GAAI;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC;AAApB,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMH;;AA7B2B;;AAA1BH,O,CACKa,Y,GAAe;AAClBR,EAAAA,KAAK,EAAEN,SAAS,CAACe;AADC,C;AA+B1B,eAAed,OAAf","sourcesContent":["import React , { Component } from 'react'\nimport ThemeSwitch from './ThemeSwitch'\nimport PropTypes from 'prop-types'\n\nclass Content extends Component {\n    static contextTypes = {\n        store: PropTypes.object\n      }\n    \n    constructor () {\n        super()\n        this.state = { themeColor: '' }\n    }\n    \n    componentWillMount () {\n        const { store } = this.context\n        this._updateThemeColor()\n        store.subscribe(() => this._updateThemeColor())\n    }\n    \n    _updateThemeColor () {\n        const { store } = this.context\n        const state = store.getState()\n        this.setState({ themeColor: state.themeColor })\n    }\n    \n    render () {\n        return (\n          <div>\n            <p style={{ color: this.state.themeColor }}>React.js 小书内容</p>\n            <ThemeSwitch />\n          </div>\n        )\n    }\n}\n\nexport default Content"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/jilin.zhou/Desktop/reactProj/make_react_redux/make-react-redux/src/Content.js\";\nimport React, { Component } from 'react';\nimport ThemeSwitch from './ThemeSwitch';\nimport { connect } from './react-redux';\nimport PropTypes from 'prop-types';\n\nclass Content extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: this.props.themeColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"React.js \\u5C0F\\u4E66\\u5185\\u5BB9\"), React.createElement(ThemeSwitch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n} // define State to props key : value\n\n\nContent.propTypes = {\n  themeColor: PropTypes.string // constructor () {\n  //     super()\n  //     this.state = { themeColor: '' }\n  // }\n  // componentWillMount () {\n  //     const { store } = this.context\n  //     this._updateThemeColor()\n  //     store.subscribe(() => this._updateThemeColor())\n  // }\n  // _updateThemeColor () {\n  //     const { store } = this.context\n  //     const state = store.getState()\n  //     this.setState({ themeColor: state.themeColor })\n  // }\n\n};\n\nconst mapStateToProps = state => {\n  return {\n    themeColor: state.themeColor\n  };\n};\n\nContent = connect(mapStateToProps)(Content);\nexport default Content;","map":{"version":3,"sources":["/Users/jilin.zhou/Desktop/reactProj/make_react_redux/make-react-redux/src/Content.js"],"names":["React","Component","ThemeSwitch","connect","PropTypes","Content","render","color","props","themeColor","propTypes","string","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAsB5BK,EAAAA,MAAM,GAAI;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC;AAApB,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMH;;AA7B2B,C,CAgChC;;;AAhCMJ,O,CACKK,S,GAAY;AACfD,EAAAA,UAAU,EAAGL,SAAS,CAACO,MADR,CAInB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAnBmB,C;;AAgCvB,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHJ,IAAAA,UAAU,EAAGI,KAAK,CAACJ;AADhB,GAAP;AAGH,CAJD;;AAMAJ,OAAO,GAAGF,OAAO,CAACS,eAAD,CAAP,CAAyBP,OAAzB,CAAV;AAEA,eAAeA,OAAf","sourcesContent":["import React , { Component } from 'react'\nimport ThemeSwitch from './ThemeSwitch'\nimport { connect } from './react-redux'\nimport PropTypes from 'prop-types'\n\nclass Content extends Component {\n    static propTypes = {\n        themeColor : PropTypes.string\n      }\n    \n    // constructor () {\n    //     super()\n    //     this.state = { themeColor: '' }\n    // }\n    \n    // componentWillMount () {\n    //     const { store } = this.context\n    //     this._updateThemeColor()\n    //     store.subscribe(() => this._updateThemeColor())\n    // }\n    \n    // _updateThemeColor () {\n    //     const { store } = this.context\n    //     const state = store.getState()\n    //     this.setState({ themeColor: state.themeColor })\n    // }\n    \n    render () {\n        return (\n          <div>\n            <p style={{ color: this.props.themeColor }}>React.js 小书内容</p>\n            <ThemeSwitch />\n          </div>\n        )\n    }\n}\n\n// define State to props key : value\nconst mapStateToProps = (state) => {\n    return {\n        themeColor : state.themeColor\n    }\n}\n\nContent = connect(mapStateToProps)(Content)\n\nexport default Content"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/Users/jilin.zhou/Desktop/reactProj/colorredux/color_redux/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/jilin.zhou/Desktop/reactProj/colorredux/color_redux/src/react-redux.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport const connect = mapStateToProps => WrappedComponent => {\n  class Connect extends Component {\n    // 定义context对象 ，store 数据类型\n    constructor() {\n      super();\n      this.state = {\n        allProps: {}\n      };\n    }\n\n    componentWillMount() {\n      const store = this.context.store;\n\n      this._updateProps();\n\n      store.subscribe(() => this._updateProps());\n    }\n\n    _updateProps() {\n      const store = this.context.store;\n      let stateProps = mapStateToProps(store.getState(), this.props);\n      this.setState({\n        allProps: _objectSpread({}, stateProps, this.props)\n      });\n    }\n\n    render() {\n      //    // 从 context 获取 store\n      //    const { store } = this.context\n      //    // 调用 mapStateToProps 传递 store.getState() 获取当前上下文需要的属性\n      //    let stateProps = mapStateToProps(store.getState())\n      //    // { ...stateProps } 意思是把这个对象里面的属性全部通过 ‘props’ 方式传递进去 \n      return React.createElement(WrappedComponent, Object.assign({}, this.state.allProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  Connect.contextTypes = {\n    store: PropTypes.object\n  };\n  return Connect;\n};","map":{"version":3,"sources":["/Users/jilin.zhou/Desktop/reactProj/colorredux/color_redux/src/react-redux.js"],"names":["React","Component","PropTypes","connect","mapStateToProps","WrappedComponent","Connect","constructor","state","allProps","componentWillMount","store","context","_updateProps","subscribe","stateProps","getState","props","setState","render","contextTypes","object"],"mappings":";;AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,OAAO,GAAIC,eAAD,IAAsBC,gBAAD,IAAsB;AAC/D,QAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAC5B;AAKAM,IAAAA,WAAW,GAAE;AACT;AACA,WAAKC,KAAL,GAAa;AAAEC,QAAAA,QAAQ,EAAG;AAAb,OAAb;AACH;;AAEDC,IAAAA,kBAAkB,GAAE;AAAA,YACRC,KADQ,GACE,KAAKC,OADP,CACRD,KADQ;;AAEhB,WAAKE,YAAL;;AACAF,MAAAA,KAAK,CAACG,SAAN,CAAgB,MAAM,KAAKD,YAAL,EAAtB;AACH;;AAEDA,IAAAA,YAAY,GAAE;AAAA,YACFF,KADE,GACQ,KAAKC,OADb,CACFD,KADE;AAEV,UAAII,UAAU,GAAGX,eAAe,CAACO,KAAK,CAACK,QAAN,EAAD,EAAoB,KAAKC,KAAzB,CAAhC;AACA,WAAKC,QAAL,CAAc;AACVT,QAAAA,QAAQ,oBACDM,UADC,EAED,KAAKE,KAFJ;AADE,OAAd;AAMH;;AAEDE,IAAAA,MAAM,GAAE;AACP;AACA;AACA;AACA;AACA;AACG,aAAO,oBAAC,gBAAD,oBAAuB,KAAKX,KAAL,CAAWC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH;;AAnC2B;;AAA1BH,EAAAA,OADyD,CAGpDc,YAHoD,GAGrC;AAClBT,IAAAA,KAAK,EAAGT,SAAS,CAACmB;AADA,GAHqC;AAsC/D,SAAOf,OAAP;AACF,CAvCM","sourcesContent":["import React , { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const connect = (mapStateToProps) => (WrappedComponent) => {\n   class Connect extends Component {\n       // 定义context对象 ，store 数据类型\n       static contextTypes = {\n           store : PropTypes.object\n       }\n\n       constructor(){\n           super()\n           this.state = { allProps : {} }\n       }\n\n       componentWillMount(){\n           const { store } = this.context\n           this._updateProps()\n           store.subscribe(() => this._updateProps())\n       }\n\n       _updateProps(){\n           const { store } = this.context\n           let stateProps = mapStateToProps(store.getState() , this.props)\n           this.setState({\n               allProps : {\n                   ...stateProps ,\n                   ...this.props\n               }\n           })\n       }\n\n       render(){\n        //    // 从 context 获取 store\n        //    const { store } = this.context\n        //    // 调用 mapStateToProps 传递 store.getState() 获取当前上下文需要的属性\n        //    let stateProps = mapStateToProps(store.getState())\n        //    // { ...stateProps } 意思是把这个对象里面的属性全部通过 ‘props’ 方式传递进去 \n           return <WrappedComponent { ...this.state.allProps } />\n       }\n   }\n   return Connect\n}"]},"metadata":{},"sourceType":"module"}